# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET           /                                      controllers.Landing.index
GET           /branches                              controllers.Branches.branches
GET           /branch                                controllers.Branches.activities(branchName: String)

GET           /config                                controllers.Config.getConfig
POST          /config                                controllers.Config.setConfig()

GET           /open                                  controllers.Landing.redirect(id:Int)

GET           /login                                 controllers.Login.index
GET           /login/github                          controllers.Login.githubLogin
GET           /login/oauth                           controllers.Login.oauth(code ?= "")
POST          /login/submit                          controllers.Login.submit
GET           /login/logout                          controllers.Login.logout
POST          /login/update                          controllers.Login.updateInfo(slackName:String)

GET           /jenkins/build                         controllers.Jenkins.build(branch:String, number: Int)
POST          /jenkins/forceBuild                    controllers.Jenkins.forceBuild()
POST          /jenkins/toggleBuild                   controllers.Jenkins.toggleBuild(branchId:String, buildNumber:Int, toggled:Boolean)
GET           /jenkins/buildActions                  controllers.Jenkins.buildActions(branchName:String, buildNumber:Option[Int])
GET           /jenkins/lastBuilds                    controllers.Jenkins.lastBuilds(branchName:String, count:Int)
GET           /jenkins/buildStatus                   controllers.Jenkins.buildStatus(id:Int)
POST          /jenkins/deployBuild                   controllers.Jenkins.deployBuild(build:String, environment:String)
POST          /jenkins/updateBuild                   controllers.Jenkins.updateBuild()


GET           /jenkins/run                           controllers.Jenkins.run(branch: String, build: Int, part: String, run: String)
GET           /jenkins/testCase                      controllers.Jenkins.testCase(branch: String, build: Int, part: String, run: String, test: String)
GET           /jenkins/artifact                      controllers.Jenkins.artifact(file: String)

GET           /github/merge                          controllers.Github.merge(branchName: String)
GET           /github/status                         controllers.Github.prStatus(id:Int)
GET           /github/pullRequest                    controllers.Github.pullRequest(id:Int)

POST          /tp/changeEntityState                  controllers.Targetprocess.changeEntityState(entityId:Int, entityStateId:Int)

GET           /buildboard2                           buildboard2.controllers.Settings.settings
GET           /buildboard2/account/:toolToken        buildboard2.controllers.Accounts.account(toolToken: String, token: String)
POST          /buildboard2/account/:toolToken        buildboard2.controllers.Accounts.save(toolToken: String, token: String)
DELETE        /buildboard2/account/:toolToken        buildboard2.controllers.Accounts.delete(toolToken: String, token: String)
GET           /buildboard2/builds                    buildboard2.controllers.Builds.builds(take: Option[Int], skip: Option[Int], token: String)
GET           /buildboard2/jobs                      buildboard2.controllers.Jobs.jobs(take: Option[Int], skip: Option[Int], token: String)
GET           /buildboard2/artifacts                 buildboard2.controllers.Artifacts.artifacts(take: Option[Int], skip: Option[Int], token: String)
GET           /buildboard2/artifact                  buildboard2.controllers.Artifacts.artifact(file: String)

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                          controllers.Assets.at(path="/public", file)
