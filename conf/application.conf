# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret = "<vt[Z1T9n5f>WB2fPZ6N=sVSifYCVZ@ZW:Oa=EKl?D>nWXTlWhoPSAJuFVIMEQQ:"

# The application languages
# ~~~~~
application.langs = "en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
dbplugin = disabled
evolutionplugin = disabled
ehcacheplugin = disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG


mongodb.default.db = "buildboard"
# Optional values
#mongodb.default.host = "127.0.0.1"
#mongodb.default.port = 27017
#mongodb.default.user = "leon"
#mongodb.default.password = "123456"

# MongoURI
# ~~~~~
# a MongoURI can also be used http://www.mongodb.org/display/DOCS/Connections
# mongodb.default.uri = "mongodb://127.0.0.1:27017,mongodb.org:1337/salat-test"

# WriteConcern
# ~~~~~
# Can be any of the following
#
# fsyncsafe - Exceptions are raised for network issues and server errors; Write operations wait for the server to flush data to disk.
# replicassafe - Exceptions are raised for network issues and server errors; waits for at least 2 servers for the write operation.
# safe - Exceptions are raised for network issues and server errors; waits on a server for the write operation.
# normal - Exceptions are raised for network issues but not server errors.

#mongodb.default.writeconcern = "safe"

# Replica sets
# ~~~~~
# http://www.mongodb.org/display/DOCS/Why+Replica+Sets
#
# To user a replicaset instead of a single host, omit optional values and use the configuration below instead.
# Since replica sets use public key authentication, user and password won't work together with the replicaset option.

#mongodb.default.replicaset {
#    host1.host = "10.0.0.1"
#
#    host2.host = "10.0.0.2"
#    host2.port = 27018
#}

# Mongo Options
# ~~~~~
# http://api.mongodb.org/java/2.8.0/com/mongodb/MongoOptions.html
#
# For passing custom options to the MongoConnection add the properties under "options". Add just the ones which are different from defaults.

#mongodb.default.options {
#    connectionsPerHost = 100
#    threadsAllowedToBlockForConnectionMultiplier = 1000
#    connectTimeout = 60000
#}

#github oauth settings

github.oauth.client_id = "your client id"
github.oauth.client_secret = "your client secret"
github.oauth.redirect_url = "your redirect url"


# cache

cache.user.tp.token = "your tp token"
cache.user.github.token = "your github token"

github.cache.interval = 5 minutes
jenkins.cache.interval = 1 minute


# build cycle settings

build.cycle.Short {
  funcTests = [
    "PartComet",
    "PartViews", "PartViews0", "PartViews1", "PartViews2", "PartViews3", "PartViews4", "PartViews5", "PartViews6", "PartViews7", "PartViews8",
    "PartPlugins1", "PartPlugins2", "PartPlugins3", "PartPlugins4",
    "PartPy1", "PartPy2",
    "PartBoard1",
    "PartOther"
  ]
  unitTests = "All"
  includeUnstable = false
  buildFullPackage = false
}

build.cycle.Full {
  funcTests = "All"
  unitTests = "All"
  includeUnstable = false
  buildFullPackage = true
}

build.cycle.PackageOnly {
  funcTests = "None"
  unitTests = "None"
  buildFullPackage = true
  includeUnstable = false
}
